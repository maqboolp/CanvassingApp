services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: hoover_canvassing
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../backend
      dockerfile: ../deployment/Dockerfile.dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=db;Database=hoover_canvassing;Username=${DB_USER:-postgres};Password=${DB_PASSWORD:-postgres123}
      - JwtSettings__Secret=${JWT_SECRET:-your-super-secret-jwt-key-here-change-in-production-min-32-chars}
      - JwtSettings__Issuer=http://localhost:8080
      - JwtSettings__Audience=http://localhost:8080
      - JwtSettings__ExpirationMinutes=480
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - Twilio__AccountSid=${TWILIO_ACCOUNT_SID:-YOUR_TWILIO_ACCOUNT_SID}
      - Twilio__AuthToken=${TWILIO_AUTH_TOKEN:-YOUR_TWILIO_AUTH_TOKEN}
      - Twilio__FromPhoneNumber=${TWILIO_FROM_PHONE_NUMBER:-YOUR_TWILIO_PHONE_NUMBER}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ../backend/HooverCanvassingApi:/src/HooverCanvassingApi:cached

# Uncomment to run frontend with Docker (needs development setup)
  # frontend:
  #   build:
  #     context: ../frontend
  #     dockerfile: ../deployment/Dockerfile.frontend
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8080
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - api
  #   restart: unless-stopped

volumes:
  postgres_data: